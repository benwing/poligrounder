#!/bin/sh

if [ -z "$TEXTGROUNDER_DIR" ]; then
  echo "Must set TEXTGROUNDER_DIR to top level of TextGrounder distribution"
  exit 1
fi

# Sample run to convert the old Twitter GeoText corpus:
#
# cotg=/path/to/twitter-geotext
# tge=/path/to/temporary-conversion
# cd $cotg
# ### Note the mmv is a zsh alias, specifically the following zsh commands:
# ###   alias mmv='noglob zmv -W'
# ###   autoload -U zmv
# mmv output-*-docthresh docthresh-*
# cd $tge
# rm -rf convert-corpora-*
# run-convert-corpus --steps all --add-dir-prefix $cotg/docthresh-*
# cd convert-corpora-4
# for x in docthresh-*; do (echo $x; cd $x; mmv geotext-twitter-* twitter-geotext-*; bzip2 *-unigram-counts.txt); done
# cd $cotg
# mkdir orig-geotext-corpus
# mv docthresh-* orig-geotext-corpus
# mv $tge/convert-corpora-4/docthresh-* .
# chmod -R go+rX .

help() {
  cat <<FOO
Usage: $0 --steps "STEPS ..." [--output-dir-prefix PREFIX] [--add-dir-prefix] DIR ...

Convert corpora using various steps (e.g. from old-style to new-style,
removing unneeded GeoText fields, splitting by training/dev/test split).
At least one step must be given.

Possible steps:

convert-to-schema-and-document = Split the old document-data file into a
                                 document metadata file and associated schema.

merge-metadata-and-old-counts = Merge metadata and old counts files into
                                combined new-format corpus.

frob-geotext = Modify various fields in a GeoText corpus to put it into
               the new format.

split-by-training = Split into sub-corpora based on the 'split' field
                    (training vs. dev vs. test).

Each step writes its output into a new directory, and the next step uses
that directory and writes its output into another new directory.

--output-dir-prefix specifies the prefix used for naming the temporary
output directories into which intermediate and final results are stored.
The default is 'convert-corpora'; then, 'convert-corpora-1' contains the
results from running the first step in --steps, 'convert-corpora-2'
contains results from the second step, etc.  Final results are in the
highest-numbered such directory.

--add-dir-prefix, if given, controls whether the INPUT directory will be
added to the end of the prefix used in the schema and data files generated
in the corpora inside of the output dirs.  Normally, the existing prefix
of the files is used as the new prefix, but with --add-dir-prefix, the
input directory will also be added.  This is mostly useful for handling
the different threshold values, where the input corpora files for all
threshold values have the same names but we want differently-named output
corpora.  For Wikipedia corpora, don't use it.
FOO
  exit 1
}

steps=
output_dir_prefix=convert-corpora
add_dir_prefix=
while true; do
  case "$1" in
    --steps ) steps="$2"; shift 2 ;;
    --output-dir-prefix ) output_dir_prefix="$2"; shift 2 ;;
    --add-dir-prefix ) add_dir_prefix="--add-dir-prefix"; shift ;;
    * ) break ;;
  esac
done

if [ -z "$*" -o -z "$steps" ]; then
  help
fi

if [ "$steps" = all ]; then
  steps="convert-to-schema-and-document merge-metadata-and-old-counts frob-geotext split-by-training"
fi

if [ "$steps" = wiki ]; then
  steps="convert-to-schema-and-document merge-metadata-and-old-counts split-by-training"
fi

echo "Steps are $steps"

for dir in ${1+"$@"}; do
output_dir="$dir"
dirbase=`basename $dir`
stepnumber=0

for step in $steps; do
input_dir="$output_dir"
stepnumber=`expr $stepnumber + 1`
output_dir="$output_dir_prefix-$stepnumber/$dirbase"
while [ -e "$output_dir" ]; do
  echo "Prospective output dir '$output_dir' already exists, trying another."
  stepnumber=`expr $stepnumber + 1`
  output_dir="$output_dir_prefix-$stepnumber/$dirbase"
done

echo "Executing step '$step' on directory '$dir' ..."
echo "Input dir is '$input_dir', output dir is '$output_dir' ..."

if [ "$step" = convert-to-schema-and-document ]; then
  convert-old-docfile-to-metadata-schema-and-file \
    $add_dir_prefix --output-dir "$output_dir" "$input_dir"

elif [ "$step" = merge-metadata-and-old-counts ]; then
  textgrounder run opennlp.textgrounder.preprocess.MergeMetadataAndOldCounts \
    -o "$output_dir" -i "$input_dir" \
    --counts-file $dir/*-counts-only-coord-documents.txt*

elif [ "$step" = frob-geotext ]; then
  textgrounder run opennlp.textgrounder.preprocess.FrobCorpus \
    -o "$output_dir" -i "$input_dir" \
    --rename-field title=user \
    -a corpus=twitter-geotext-$dirbase -a corpus-type=twitter-user \
    -r id -r redir -r namespace -r is_list_of -r is_disambig \
    -r is_list -r incoming_links

elif [ "$step" = split-by-training ]; then
  textgrounder run opennlp.textgrounder.preprocess.FrobCorpus \
    -o "$output_dir" -i "$input_dir" \
    --split-by-field split

else
echo "Unrecognized step $step"

fi

done
done

